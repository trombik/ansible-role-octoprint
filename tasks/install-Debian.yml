---

- name: Create octoprint_group
  group:
    name: "{{ octoprint_group }}"

- name: Create octoprint_user
  user:
    name: "{{ octoprint_user }}"
    group: "{{ octoprint_group }}"
    groups: "{{ octoprint_extra_groups }}"
    home: "{{ octoprint_home_dir }}"
    create_home: yes
    comment: "{{ octoprint_user }}"

- name: Install octoprint_extra_packages
  apt:
    name: "{{ octoprint_extra_packages }}"
    state: present

- name: Install octoprint
  pip:
    virtualenv: "{{ octoprint_dir }}"
    name: "{{ octoprint_package }}"
    state: present
  become: yes
  become_user: "{{ octoprint_user }}"
  # XXX sudo specific
  become_flags: -H -S
  vars:
    ansible_ssh_pipelining: true

- name: "Create /etc/default/{{ octoprint_service }}"
  template:
    src: Debian.default.j2
    dest: "/etc/default/{{ octoprint_service }}"
    mode: "0644"
    validate: sh -n %s
  notify:
    - Restart octoprint

- name: Create systemd service file
  template:
    src: Debian.systemd.j2
    dest: "/lib/systemd/system/{{ octoprint_service }}.service"
    mode: "0755"
  register: __octoprint_create_systemd_file
  notify:
    - Restart octoprint
  # XXX this does not support non-systemd distribution, such as Devuan
  when:
    - ansible_service_mgr == 'systemd'

- name: Reload systemd
  systemd:
    daemon_reload: yes
  when:
    - ansible_service_mgr == 'systemd'
    - __octoprint_create_systemd_file.changed

- name: Enable octoprint_service
  service:
    name: "{{ octoprint_service }}"
    enabled: yes
